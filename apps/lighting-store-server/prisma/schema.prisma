datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Review {
  comment    String?
  createdAt  DateTime @default(now())
  id         String   @id @default(cuid())
  indexLight String?
  light      US?      @relation(fields: [lightId], references: [id])
  lightId    String?
  rating     Int?
  updatedAt  DateTime @updatedAt
}

model Order {
  createdAt      DateTime  @default(now())
  id             String    @id @default(cuid())
  indexLight     String?
  indexOrderDate DateTime?
  light          US?       @relation(fields: [lightId], references: [id])
  lightId        String?
  orderDate      DateTime?
  quantity       Int?
  totalAmount    Float?
  updatedAt      DateTime  @updatedAt
}

model US {
  category      Category? @relation(fields: [categoryId], references: [id])
  categoryId    String?
  createdAt     DateTime  @default(now())
  description   String?
  id            String    @id @default(cuid())
  indexCategory String?
  name          String?
  orders        Order[]
  price         Float?
  reviews       Review[]
  stockQuantity Int?
  uniqueName    String?
  updatedAt     DateTime  @updatedAt
}

model Category {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  lights      US[]
  name        String?
  uniqueName  String?
  updatedAt   DateTime @updatedAt
}

model Project {
  createdAt   DateTime @default(now())
  description String?
  id          String   @id @default(cuid())
  name        String?
  uniqueName  String?
  updatedAt   DateTime @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

model Unaise988 {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  unaise98  String?
  updatedAt DateTime @updatedAt
  username  String?
}
